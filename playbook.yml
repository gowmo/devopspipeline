---


- name: ansible-playbook for amazon linux instance  
  hosts: ec2
  become: yes

  vars:
    node_apps_location: /usr/local/opt/node

  tasks:
    - name : ping the server  
      action: ping

    - name: wget install
      yum:  
       name: wget
       state: present
       update_cache: true
      become: true

    - name: Install EPEL repo.
      yum: name=epel-release state=latest

    - name: Install Node.js and npm.
      yum: name=npm state=latest enablerepo=epel

    - name: Install pm2
      shell: "wget -qO- https://getpm2.com/install.sh | bash"
      become: ssh -i "terraform.pem" ec2-user@ec2-3-84-23-247.compute-1.amazonaws.com true

    - name: Install apache check httpd
      yum: name=httpd state=present enablerepo=epel

    - name: Copy public folder to server.
      copy: "src=public dest={{ node_apps_location }}"

    - name: Copy src folder to server.
      copy: "src=src dest={{ node_apps_location }}"

    - name: Copy package.json to server.
      copy: "src=package.json dest={{ node_apps_location }}"

    - name: Copy package-lock.json file to server.
      copy: "src=package-lock.json dest={{ node_apps_location }}" 

    - name: Copy yarn.lock file to server.
      copy: "src=yarn.lock dest={{ node_apps_location }}"

    - name: Copy readme.md to server.
      copy: "src=README.md dest={{ node_apps_location }}"

    - name: Copy LICENSE to server.
      copy: "src=LICENSE dest={{ node_apps_location }}"  


    - name: restrict the strict ssl
      shell: "npm config set strict-ssl false" 

    - name: Install the node module dependencies
      shell: "npm install -g npm@latest" 
      args: 
        chdir: /usr/local/opt/node
      become: true

    - name: serve the app using pm2
      shell: pm2 serve --name "emoji-app" 
      args: 
        chdir: /usr/local/opt/node
...
